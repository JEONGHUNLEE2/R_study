질문토의

1. **NHIS 연습문제 2 - m1, m2.. 컬럼명을 안 붙여주면 왜 오류가 날까요?**
    NHIS %>%
    group_by(SEX, AGE_GROUP) %>%
    summarise(m1=mean(VSCN), m2=mean(RECN), m3=mean(EDEC_TRAMT), m4=mean(EDEC_SBRDN_AMT)) %>%
    arrange(desc(m3))
  정리 : arrange 안에는 함수를 넣으면 안되고 변수지정으로 해야함! , 다시 한번 확인해보기

2. 성 / 연령대별 진료건수 계산 (진료건수 기준 내림차순 정렬)**
    NHIS %>%
    group_by(SEX, AGE_GROUP) %>%
    summarise(n=length(SEX)) %>%
    arrange(desc(n))
    NHIS %>%
    dplyr::count(SEX, AGE_GROUP) %>%
    arrange(desc(n))

Q1. dply :: 이건 왜 사용 하는지
dplyr::는 나중에 여러 가지 패키지 함수를 사용하게 될 때 겹치는 것을 방지하기 위해서 사용됨
해석 : dplyr에 있는 count를 사용하겠다!!

Q2. 1번에서 n=length(SEX)가 왜 여기서 쓰이는지 ?
SEX,AGE_GROUP에서 행(데이터 개수)를 구해주는 거라서 length()함수를 사용해서 데이터 개수 파악, count()와 같은 느낌



3. 성 / 연령대 / 진료과목별 환자수 계산 (환자수 기준 내림차순 정렬)
    NHIS %>%
    select(SEX, AGE_GROUP,DSBJT_CD, IDV_ID) %>%
    unique() %>%
    count(SEX, AGE_GROUP,DSBJT_CD) %>%
    arrange(desc(n))

Q1. 여기서 unique()를 쓰는 이유가 결과치가 나와야 하는 컬럼은 select에서 지정한 컬럼이다라는 의미?**
중복값을 없애기 위해서 unique()함수 사용


4, 성별/연령대별 3개 최고빈도 주상병코드**
top_n(n=k, wt=기준변수) : 기준변수를 기준으로 상위 k개 관측치 선택, 주상병코드 조회 (MAIN_SICK)
    NHIS %>%
    count(SEX, AGE_GROUP, MAIN_SICK) %>%
    group_by(SEX, AGE_GROUP) %>%
    top_n(n= 3 , wt=n) %>%
    arrange(SEX, AGE_GROUP, desc(n))

Q1. 굳이 기준변수를 n으로 두는 이유는?**
count()함수를 실행하면 결과는 n컬럼으로 나타나기 때문에 desc(n)을 내림차순으로 정렬해줌

-----------------------------------------------------------------------------------------
    NHIS %>%
    group_by(SEX, AGE_GROUP, MAIN_SICK) %>%
    summarise(n=n()) %>%
    top_n(n=3 , wt=n) %>%
    arrange(SEX, AGE_GROUP, desc(n))
Q2. summarise(n=n()) 가 왜 있어야 하는지?**
num = n() 국룰처럼 사용된다는 그 내용처럼 count를 해주는 느낌!

-------------------------------------------------------------------------------------------

키워드 정리

Dplyr
데이터를 요약할 때 가장 많이 사용하는 패키지 중 하나

SELECT(데이터명, 열1, 열2…)
보통 컬럼 선택할 때 [ , ___]로 불러오면 벡터형태로 나오는데, 여기서는 데이터프레임 형태 그대로 가져온다는 차이가 있음

FILTER(데이터명, 조건1, 조건2…)
ex) filter(delivery, 시군구==’성북구’, 요일 %in% c(‘토’,’일’), 업종==’피자’ | 통화건수>=100)

ARRANGE(데이터명, desc(열1), 열2…)
앞에 명기된 열부터 차례대로 오름차순 정렬해줌

MUTATE(데이터명, 새로운 컬럼명 = 계산식)
변수를 생성하고 활용하는것에 유연함

GROUP_BY & SUMMARIZE
대부분 짝으로 같이 씀. 묶어준 그룹에 대해 집계함수 등을 적용해줄 수 있음
(group_by와 함께 쓰지 않으면 그냥 열에 바로 집계함수를 쓰면 되므로 summarise가 필요없음)
summarise에 변수 이름을 주는게 보기 좋음
ex) 시간에 따른 카테고리에 따른 판매금액을 뿌려줘

Pipeline(%>%)
코드의 연결을 위한 파이프라인 (dplyr의 가장 유용한 함수!)

Slice(데이터이름, 행번호)
특정 행번호 관측치 출력

Top_n(데이터이름, sinz=n, wt=변수이름)
많이 쓰이는 유용한 함수! 시간별로 구매액 Top n대 고객 추출할 수 있음
중복된 건 무시하고 정확히 n건만 보고 싶으면 내림차순 정렬해서 head로 5건만 조회하는게 편리할 때도 있음
ex) top_n(delivery, 5, 통화건수)

distinct(delivery, 업종) 새로운 행번호 / unique 원래 행번호 유지
distinct는 처리하는데 시간이 오래 걸려서 대용량 데이터 처리할 때는 잘 안씀
ex) 유통업계에서는 ~ 조건으로 구매한 고객이 몇 명인지? 조회할때 distinct 활용

count(데이터이름, 열이름)
해당 열을 group_by로 묶은 상태에서 각 group의 행의 수를 리턴해줌

group_by(데이터이름, 열이름)

ungroup()의 활용 : 익숙해지면 실무에서 많이 활용하는 기능
패치가 되면서 ungroup을 사용 안해도 group_by로 가능해진 거 같음

-----------------------------------------------------------------------------------------------------------

TIP

1. 데이터허브 활용하자
   SKT 데이터허브, 서울시 공공데이터허브 등

2. 구글링 잘 활용하자
   dplyr cheat sheet, 패키지 cheat sheet 하면 해당 패키지 유용함수 이미지로 잘 표현되어있음
   ggplot cheat sheet (시각화 관련 패키지. dplyr + ggplot à 실무에 매우 유용)
   
3. iris로 연습 많이 해보자. 데이터 공부의 공중화장실..
